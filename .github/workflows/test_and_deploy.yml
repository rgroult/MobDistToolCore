name: Test And Deploy

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: gem install xcpretty
    - run: gem install xcpretty-travis-formatter
    - run: brew install pkg-config
    - run: brew install libressl
    - run: brew tap mongodb/brew
    - run: brew install mongodb-community@3.6
    - run: mkdir -p $PWD/data/db
    - run: cp binaries/aapt /usr/local/bin && chmod +x /usr/local/bin/aapt
    - run: curl --version
    - run: python3 --version
    - run: pip3 install requests
    - run: which python3 > Ressources/python.path
    - run: python3  testDeps.py 
    - run: brew services start mongodb/brew/mongodb-community@3.6
    - run: swift package generate-xcodeproj
    - run: set -o pipefail && xcodebuild -scheme Run clean test -enableCodeCoverage YES -enableAddressSanitizer YES | xcpretty -f `xcpretty-travis-formatter`
    - run: bash <(curl -s https://codecov.io/bash)
      
  linux:
    services:
      mongodb:
        image: mongo:3.6
        ports:
        - 27017:27017
    container: 
      image: vapor/swift:5.1-xenial
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: apt-get update && apt-get install -y libssl-dev zlib1g-dev unzip aapt
    - run: MDT_mongoServerUrl=mongodb://mongodb:27017/mobdisttool swift test --enable-test-discovery --sanitize=thread

  linux_bionic:
    services:
      mongodb:
        image: mongo:3.6
        ports:
        - 27017:27017
    container: 
      image: vapor/swift:5.1-bionic
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: apt-get update && apt-get install -y libssl-dev zlib1g-dev unzip aapt
    - run: MDT_mongoServerUrl=mongodb://mongodb:27017/mobdisttool swift test --enable-test-discovery --sanitize=thread
      
  deploy_fat:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [macos, linux, linux_bionic]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with: 
          name: rgroult2/mobdisttool-core:latest
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: Dockerfile
  
  deploy_bionic:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [macos, linux, linux_bionic]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@2.14
        with: 
          name: rgroult2/mobdisttool-core:bionic-latest
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: DockerfileMultiStage
  

